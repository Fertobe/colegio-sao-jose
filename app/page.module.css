/* app/page.module.css */

.page {
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);

  --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2;

  display: grid;
  grid-template-rows: 20px 1fr 20px;
  align-items: center;
  justify-items: center;
  min-height: 100svh;
  padding: 80px;
  gap: 64px;
  font-family: var(--font-geist-sans);
}

@media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}

.main {
  display: flex;
  flex-direction: column;
  gap: 32px;
  grid-row-start: 2;
}

.main ol {
  font-family: var(--font-geist-mono);
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}

.ctas {
  display: flex;
  gap: 16px;
}

.ctas a {
  appearance: none;
  border-radius: 128px;
  height: 48px;
  padding: 0 20px;
  border: 1px solid transparent;
  transition:
    background 0.2s,
    color 0.2s,
    border-color 0.2s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  line-height: 20px;
  font-weight: 500;
}

a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 158px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 24px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: 600px) {
  .page {
    padding: 32px;
    padding-bottom: 80px;
  }

  .main {
    align-items: center;
  }

  .main ol {
    text-align: center;
  }

  .ctas {
    flex-direction: column;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
    padding: 0 16px;
  }

  a.secondary {
    min-width: auto;
  }

  .footer {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

/* ===================================================== */
/* === Conquistas: hover no CARD, sem zoom na imagem === */
/* ===================================================== */

/* 1) Mate QUALQUER zoom/transform na imagem (inclusive de group-hover) */
.conquistasHoverSoft :where(img) {
  transform: none !important;
  transition: none !important;     /* evita animação de escala */
}

/* Segurança extra: garante zero escala em qualquer estado */
.conquistasHoverSoft :where(img:hover, img:focus, img:active) {
  transform: none !important;
}

/* 2) Stroke no contêiner do card (wrapper direto da img) */
.conquistasHoverSoft :where(a, div):has(> img) {
  border-radius: 28px;
  outline: 2px solid transparent;
  outline-offset: 0;
  transition: outline-color 180ms ease, box-shadow 180ms ease;
}

/* Hover/focus do CARD -> azul com glow suave */
.conquistasHoverSoft :where(a, div):has(> img):hover,
.conquistasHoverSoft :where(a, div):has(> img):focus-within {
  outline-color: #14D3E0;
  box-shadow: 0 0 0 8px rgba(20, 211, 224, 0.12);
}

/* ===================================================== */
/* === HERO utilities — versão canônica e sem duplicatas */
/* ===================================================== */

/* Stage: permite a imagem “escapar” do container */
.heroStage{ position:relative; overflow:visible; }

/* API 1 — Controle genérico por variáveis (hx/hy/hs) */
.heroCtl{
  transform: translate(var(--hx,0), var(--hy,0)) scale(var(--hs,1));
  transform-origin: center bottom;
  will-change: transform;
  transition: transform 300ms ease;
  pointer-events: none;
  backface-visibility: hidden;
}

/* Presets por imagem (se usar 3 PNGs sobrepostos) */
.hero1{ --hs:1.65; --hx:0px;  --hy:90px; }
.hero2{ --hs:1.72; --hx:0px;  --hy:95px; }
.hero3{ --hs:1.68; --hx:-36px; --hy:92px; }

@media (min-width:768px){
  .hero1{ --hs:1.78; --hy:98px; }
  .hero2{ --hs:1.86; --hy:104px; }
  .hero3{ --hs:1.80; --hy:100px; --hx:-44px; }
}
@media (min-width:1024px){
  .hero1{ --hs:1.60; --hy:110px; }
  .hero2{ --hs:1.60; --hy:116px; }
  .hero3{ --hs:1.70; --hy:128px; --hx:-86px; }
}

/* API 2 — “Dock”: empurra X/Y e escala sem mexer no layout */
.heroDock{
  --dockX: 0px;
  --dockY: 18px;
  --heroScale: 1.14;
  transform: translate(var(--dockX), var(--dockY)) scale(var(--heroScale));
  transform-origin: center bottom;
  will-change: transform;
}
@media (min-width:768px){  .heroDock{ --dockY: 80px;  --heroScale: 1.18; } }
@media (min-width:1024px){ .heroDock{ --dockY: 120px; --heroScale: 1.22; } }

.heroDockShift3{ --dockX: -12px; }
@media (min-width:1024px){ .heroDockShift3{ --dockX: -20px; } }

.heroScaleMore{ --heroScale: calc(var(--heroScale) + 0.05); }
.heroScaleLess{ --heroScale: calc(var(--heroScale) - 0.05); }

/* Presets específicos da “Filosofia” (se estiver usando) */
.heroFiloCtl{
  --dockX: 32px;  /* + direita | - esquerda */
  --dockY: 18px;  /* + desce   | - sobe     */
  --heroScale: 1.24;
  transform: translate(var(--dockX), var(--dockY)) scale(var(--heroScale));
  transform-origin: center bottom;
  will-change: transform;
}
@media (min-width:768px){  .heroFiloCtl{ --dockX: 44px; --dockY: 26px; --heroScale: 1.28; } }
@media (min-width:1024px){ .heroFiloCtl{ --dockX: 56px; --dockY: 28px; --heroScale: 1.34; } }

.heroFilo1{ --heroScale: 1.34; }
.heroFilo2{ --heroScale: 1.36; }
.heroFilo3{ --dockX: 60px; --heroScale: 1.30; }

/* === Crossfade dos 3 PNGs */
@keyframes sj-hero-cycle{
  0%   { opacity: 0; }
  6%   { opacity: 1; }   /* entra suave */
  30%  { opacity: 1; }   /* visível     */
  40%  { opacity: 0; }   /* sai suave   */
  100% { opacity: 0; }
}

.heroFade{
  opacity: 0;
  animation: sj-hero-cycle 12s cubic-bezier(.4,0,.2,1) infinite both;
}

.hero1{ z-index: 3; }
.hero2{ z-index: 2; }
.hero3{ z-index: 1; }

.heroDelay1{ animation-delay: 0s; }
.heroDelay2{ animation-delay: 4s; }
.heroDelay3{ animation-delay: 8s; }

@media (prefers-reduced-motion: reduce){
  .heroFade{ animation-timing-function: linear; }
}
